<!-- NOTE: If running on a 64 bit machine then invoke this with the 64 bit msbuild.exe. More details in target ExecuteTests -->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="RunTests"  ToolsVersion="4.0">
  <PropertyGroup>
    <SourceRoot Condition=" '$(SourceRoot)'=='' ">$(MSBuildProjectDirectory)\..\</SourceRoot>
    <TestSourceRoot Condition=" '$(TestSourceRoot)'=='' ">$(SourceRoot)testing\</TestSourceRoot>
    <OutputRootNoTrailingSlash Condition=" '$(OutputRoot)'=='' ">$(SourceRoot)OutputRoot</OutputRootNoTrailingSlash>
    <OutputRoot Condition=" '$(OutputRoot)'=='' ">$(OutputRootNoTrailingSlash)\</OutputRoot>
    <TestOutputRootNoTrailingSlash Condition=" ''=='' ">$(OutputRoot)tests</TestOutputRootNoTrailingSlash>
    <TestOutputRoot Condition=" '$(TestOutputRoot)'=='' ">$(TestOutputRootNoTrailingSlash)\</TestOutputRoot>
    
    <PublishPs1 Condition=" '$(PublishPs1)'=='' ">$(MSBuildProjectDirectory)\..\Powershell\Publish-Interactive.ps1</PublishPs1>
    
    <DestModulePath Condition=" '$(DestModulePath)'=='' ">$(TestOutputRoot)PublishIntModule.psm1</DestModulePath>
  </PropertyGroup>
  
  <PropertyGroup>
    <PathToPkgWebCustomTasks Condition=" '$(PathToPkgWebCustomTasks)'=='' ">$(MSBuildProjectDirectory)\package-web.custom-tasks.tasks</PathToPkgWebCustomTasks>
  </PropertyGroup>
  
  <ItemGroup>
    <FilesInTestFolderToExclude Include="$(TestSourceRoot)*.log"/>
    <FilesInTestFolderToExclude Include="$(TestSourceRoot)PublishIntModule.psm1" />
    <FilesInTestFolderToExclude Include="$(TestSourceRoot)Ps1TestLib_0_3.zip" />
    <FilesInTestFolderToExclude Include="$(TestSourceRoot)*.tasks" />
    <FilesInTestFolderToExclude Include="$(TestSourceRoot)*.proj"/>
    
    <TestSourceFiles Include="$(TestSourceRoot)**\*" Exclude="@(FilesInTestFolderToExclude)"/>
  </ItemGroup>
  
  <Import Project="$(PathToPkgWebCustomTasks)"/>

  <PropertyGroup>
    <RunTestsDependsOn>
      Clean;
      CopyTestFilesToOutputFolder;
      _PreparePSModule;
      _DiscoverTestsInOutputFolder;
      ExecuteTests;
      FailBuildBasedOnTests
    </RunTestsDependsOn>
  </PropertyGroup>

  <Target Name="RunTests" DependsOnTargets="$(RunTestsDependsOn)" />
  
  <Target Name="Clean">
    <!-- Delete all files in the OutputRoot -->
    <ItemGroup>
      <_FilesToDelete Remove="@(_FilesToDelete)"/>
      <_FilesToDelete Include="$(TestOutputRoot)**\*" />
    </ItemGroup>
    <Delete Files="@(_FilesToDelete)"/>
  </Target>

  <Target Name="CopyTestFilesToOutputFolder">
    <Copy SourceFiles="@(TestSourceFiles)"
          DestinationFiles="@(TestSourceFiles->'$(TestOutputRoot)%(RecursiveDir)%(Filename)%(Extension)')" />
    <!-- also create the psout folder -->
    <MakeDir Directories="$(TestOutputRoot)psout\"/>
  </Target>
  
  <Target Name="_PreparePSModule">
    <MakeDir Directories="$(TestOutputRoot)"/>
    <ConvertToModule SourcePs1="$(PublishPs1)" DestModulePath="$(DestModulePath)" />
  </Target>

  <Target Name="_DiscoverTestsInOutputFolder">
    <!-- look for any ps1 file in TestOutputRoot that is named like: 'test-*.ps1' -->
    <ItemGroup>
      <PsFilesToTest Include="$(TestOutputRoot)**\test-*.ps1"/>
    </ItemGroup>    
  </Target>

  <PropertyGroup>
    <ExecuteTestsDependsOn>
      _DiscoverTestsInOutputFolder
    </ExecuteTestsDependsOn>
    
    <!-- These are the parametes that will be passed when powershell.exe is invoked (note these are always positional -->
    <!-- We need to pass a path w/o a trailing slash otherwise PS gets confused with \" when passed in it becomes " -->
    <_PsParameters>&quot;$(TestOutputRootNoTrailingSlash)&quot;</_PsParameters>
  </PropertyGroup>
  <Target Name="ExecuteTests" DependsOnTargets="$(ExecuteTestsDependsOn)" Outputs="%(PsFilesToTest.Identity)">
    <!-- call powershell.exe on all the test cases -->
    <Message Text="calling powershell.exe on script [%(PsFilesToTest.FullPath)]"/>
    <!-- since we are calling powershell.exe when this file is built it should be invoked with
    the 64 bit version of MSBuild (if building on a 64 bit machine). Otherwise the PS environment in which the test cases
    will be different than when ran outside of this process.-->
    <Exec Command="powershell.exe -NonInteractive -ExecutionPolicy RemoteSigned -File &quot;%(PsFilesToTest.FullPath)&quot; $(_PsParameters)"
          IgnoreExitCode="true">
      <Output PropertyName="CommandExitCode" TaskParameter="ExitCode"/>
    </Exec>

    <!-- if the error code is non-zero then set the DetectedPsTestFailure property 
    but continue executing all the test cases, the FailBuildBasedOnTests will fail
    based on the property-->
    <PropertyGroup>
      <DetectedPsTestFailure Condition=" '$(CommandExitCode)' != '0' ">true</DetectedPsTestFailure>
    </PropertyGroup>
    <Message Text="Found test errors in script: %(PsFilesToTest.FullPath)" Importance="high" Condition=" '$(CommandExitCode)' != '0' "/>
    <Message Text="CommandExitCode: $(CommandExitCode)" />
  </Target>

  <Target Name="FailBuildBasedOnTests">
    <Message Text="DetectedPsTestFailure: $(DetectedPsTestFailure)" />
    <Error Text="One or more PS test cases have failed. Review the log for the failures (they will show up in the log as warnings)."
           Condition=" '$(DetectedPsTestFailure)'=='true' "/> 
  </Target>
</Project>